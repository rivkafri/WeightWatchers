const fs = require('fs/promises');
const uuid = require('uuid');
// const uuidv4 = uuid.v4;

const getData = async () => fs.readFile('../users.json').then(data => JSON.parse(data));
const updateData = async (data) => fs.writeFile('../users.json', JSON.stringify(data));


const getUsers = async () => {
    const data = await getData();
    return data.users;
}

const getUserById = async (id) => {
    const data = await getData();
    const user = await data.users.find(user => user.id == id);
    return user;
}

const addUser = async (firstName, lastName, city, street, number, phone, email, height, weight) => {
    let id = 0;
    const data = await getData();
    const users = data.users || [];
    const exist = await users.find(user => user.email === email);
    if (exist)
        throw new Error('user already exists');
    if (users.length > 0)
        id = users[users.length - 1].id + 1;
    else
        id = 1;
    let obj = {
        id: id,
        firstName: firstName, lastName: lastName, address: {
            city: city, street: street,
            number: number
        }, phone: phone, email: email, height: height,
        weight: { start: weight, meetings: [] }, diary: []
    };
    users.push(obj);
    console.log(users);
    const AllData = { 'manager': data.manager, 'users': users };
    await updateData(AllData);
}

const deleteUser = async (id) => {
    const data = await getData();
    const users = data.users || [];
    const index = await users.findIndex(user => user.id === id);
    users.splice(index, 1);
    const AllData = { 'manager': data.manager, 'users': users };
    await updateData(AllData);
}

const updateOne = (_user, updates) => {
    _user.firstName = updates.firstName;
    _user.lastName = updates.lastName;
    _user.address.city = updates.city;
    _user.address.street = updates.street;
    _user.address.number = updates.number;
    _user.phone = updates.phone;
    _user.email = updates.email;
    _user.height = updates.height;
    console.log(_user);
    return _user;
}

const updateUser = async (id, updates) => {
    const data = await getData();
    const users = data.users || [];
    const _user = await users.find(user => user.id == id);
    console.log(_user);
    updateOne(_user, updates);
    const AllData = { 'manager': data.manager, 'users': users };
    await updateData(AllData);
}

module.exports = {
    getUsers,
    getUserById,
    addUser,
    deleteUser,
    updateUser
}


    // const id = uuidv4();
    // user.id = id;